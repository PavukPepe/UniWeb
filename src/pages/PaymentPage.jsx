"use client";

import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";

function PaymentPage() {
    const { courseId } = useParams(); // –ü–æ–ª—É—á–∞–µ–º courseId –∏–∑ URL
    const navigate = useNavigate();
    const [course, setCourse] = useState(null);
    const [error, setError] = useState(null);
    const [paymentStatus, setPaymentStatus] = useState(""); // –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã

    useEffect(() => {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ –ø–æ courseId
        const fetchCourse = async () => {
            try {
                const response = await fetch(`http://localhost:5252/api/courses/${courseId}`, {
                    headers: { 'Content-Type': 'application/json' },
                });

                if (!response.ok) {
                    throw new Error('–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                const data = await response.json();
                setCourse(data);
            } catch (err) {
                setError(err.message);
            }
        };

        fetchCourse();
    }, [courseId]);

    const handlePayment = async () => {
        if (!course) return;

        try {
            const userId = localStorage.getItem('userId');
            if (!userId) {
                setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç');
                return;
            }

            // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–ø–ª–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º —à–ª—é–∑–æ–º)
            // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ —Å–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É
            const response = await fetch('http://localhost:5252/api/payments', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ userId, courseId, amount: course.price }),
            });

            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–ø–ª–∞—Ç—ã');
            }

            setPaymentStatus('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
            alert('–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω!');
            navigate('/'); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
        } catch (err) {
            setError(err.message);
        }
    };

    if (error) {
        return <div className="text-danger text-center py-5">{error}</div>;
    }

    if (!course) {
        return <div className="text-white text-center py-5">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
    }

    return (
        <div className="d-flex vh-100 align-items-center">
            <div className="container py-5 w-50">
                <div className="dark-gray bg-dark g-dark text-white p-4">
                    <h2>–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞</h2>
                    <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞:</strong> {course.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"}</p>
                    <p><strong>–¶–µ–Ω–∞:</strong> {course.price} ‚ÇΩ</p>
                    <p><strong>–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:</strong> {course.instructor || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>

                    {error && <div className="text-danger mb-3">{error}</div>}
                    {paymentStatus && <div className="text-success mb-3">{paymentStatus}</div>}

                    <div className="row gap-3">
                        <button className="btn btn-outline-light btn-sm col" onClick={handlePayment}>
                            –û–ø–ª–∞—Ç–∏—Ç—åü§ë
                        </button>

                        <button className="btn btn-outline-light btn-sm col" onClick={() => navigate('/home')}>
                            –û—Ç–º–µ–Ω–∞
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default PaymentPage;