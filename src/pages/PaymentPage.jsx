"use client";

import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";

function PaymentPage() {
  const { courseId } = useParams(); // –ü–æ–ª—É—á–∞–µ–º courseId –∏–∑ URL
  const navigate = useNavigate();
  const [course, setCourse] = useState(null);
  const [error, setError] = useState(null);
  const [paymentStatus, setPaymentStatus] = useState(""); // –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—Å–µ –ø–æ courseId
    const fetchCourse = async () => {
      try {
        const response = await fetch(`http://193.37.71.67:8000/api/courses/${courseId}`, {
          headers: { 'Content-Type': 'application/json' },
        });

        if (!response.ok) {
          throw new Error('–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }

        const data = await response.json();
        setCourse(data);
      } catch (err) {
        setError(err.message);
      }
    };

    fetchCourse();
  }, [courseId]);

  const handlePayment = async () => {
    if (!course) return;

    try {
      const userId = localStorage.getItem('userId');
      if (!userId) {
        setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç');
        return;
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const paymentData = {
        UserId: parseInt(userId), // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        CourseId: parseInt(courseId), // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
        PaymentAmount: course.price || 0, // –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞
        PaymentStatus: "completed", // –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º)
      };

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ API
      const response = await fetch('http://193.37.71.67:8000/api/payments', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(paymentData),
      });

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–ø–ª–∞—Ç—ã');
      }

      const result = await response.json();
      setPaymentStatus('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
      alert('–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω!');
      navigate('/home'); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
    } catch (err) {
      setError(err.message);
    }
  };

  if (error) {
    return <div className="text-danger text-center py-5">{error}</div>;
  }

  if (!course) {
    return <div className="text-white text-center py-5">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  return (
    <div className="d-flex vh-100 align-items-center">
      <div className="container py-5 w-">
        <div className="dark-gray bg-dark g-dark text-white p-4">
          <h2>–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞</h2>
          <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞:</strong> {course.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"}</p>
          <p><strong>–¶–µ–Ω–∞:</strong> {course.price} ‚ÇΩ</p>
          <p><strong>–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:</strong> {course.instructor || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>

          {error && <div className="text-danger mb-3">{error}</div>}
          {paymentStatus && <div className="text-success mb-3">{paymentStatus}</div>}

          <div className="row gap-3">
            <button className="btn btn-outline-light btn-sm col" onClick={handlePayment}>
              –û–ø–ª–∞—Ç–∏—Ç—åü§ë
            </button>

            <button className="btn btn-outline-light btn-sm col" onClick={() => navigate('/home')}>
              –û—Ç–º–µ–Ω–∞
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}

export default PaymentPage;